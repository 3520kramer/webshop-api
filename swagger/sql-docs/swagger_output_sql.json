{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Webshop API SQL",
    "description": "Documentation for webshop API"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Customer",
      "description": "CR for customer"
    },
    {
      "name": "Login",
      "description": "Login for the different types: User/Employee/Admin"
    },
    {
      "name": "Order",
      "description": "CR for order with search"
    },
    {
      "name": "Product",
      "description": "CRUD for product"
    },
    {
      "name": "User",
      "description": "CRUD for user, with search"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customer/{customer_id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for getting a customer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for getting creating a customer",
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AddCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for getting all customers. Limited to 1000 results for performance reasons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login/user": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Roles required: Visitor, Employee, Developer or Admin",
        "description": "This is the route for the user login. This is needed for getting access to certain routes. <br><br> <b>Example login:</b> <br>username: user1<br>password: user1kode",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login/employee": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Roles required: Visitor, Employee, Developer or Admin",
        "description": "This is the route for the employee login. this is needed for getting access to certain routes.<br><br><b>Example admin login:</b> <br>username: admin@gmail.com<br>password: adminkode<br><br> <b>Example developer login:</b> <br>username: madsrunefrederiksen@gmail.com<br>password: madskode <br><br> <b>Example employee login:</b> <br>username: employee@gmail.com<br>password: employeekode",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/LoginEmployee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/register/user": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Roles required: Visitor, Employee, Developer or Admin",
        "description": "This is the route for the creating a new user",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for the user/employee to logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hashedpassword": {
      "get": {
        "tags": [
          "Login"
        ],
        "description": "",
        "parameters": [
          {
            "name": "pw",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Roles required: Visitor or User",
        "description": "This is the route for the creating a new order. a bit bugged since i dont know how to work with multiple schemas you have to copy/paste response 200 while being logged in to checkout user buying something. Other than that for some reason the product array only uses the last index",
        "parameters": [
          {
            "name": "key",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/OrderTypeTwo"
            },
            "description": "This is for testing where a non user sends to a PO box"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderTypeOne"
            },
            "description": "This is for testing where user sends to own address you need to be logged in as a user for this"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/order/{order_id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for getting a specific order.",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/{page}/{size}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for getting all orders. Can use pagination. Use 0 value if wanna use default values of p1/s1000",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/search/{key}/{value}/{page}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for seaching in orders with pagination. Key-value based. EX. KEY: \"order_status\" VALUE: \"shipped\"",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orderoverview/user": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for getting a users order overview.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for creating a new product",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AddProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for updating a product",
        "parameters": [
          {
            "name": "updatedProduct",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/EditProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product/{product_id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Roles required: Visitor, User, Employee, Developer or Admin",
        "description": "This is the route for getting a specific product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for deleting a product (if possible, else if in use archives it)",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Roles required: Visitor, User, Employee, Developer or Admin",
        "description": "This is the route for getting all products",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: Visitor, Employee, Developer or Admin",
        "description": "This is the route for creating a user",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for updating a users infomation",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/EditUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for getting a single users information",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: User, Employee, Developer or Admin",
        "description": "This is the route for deleting a user (archives it and uses a stored procedure that is triggered by an event that deletes user/customer/orders/order_product",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for getting all users. Limited to 1000 results for performance reasons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/search/{property}/{value}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Roles required: Employee, Developer or Admin",
        "description": "This is the route for searching users",
        "parameters": [
          {
            "name": "property",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "AddCustomer": {
      "type": "object",
      "properties": {
        "customer": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string",
              "example": "David"
            },
            "last_name": {
              "type": "string",
              "example": "Clements"
            },
            "street": {
              "type": "string",
              "example": "59161 Chandler Rapids"
            },
            "email": {
              "type": "string",
              "example": "nguyenpatrick@gmail.com"
            },
            "phone": {
              "type": "string",
              "example": "84081093"
            },
            "cities_postal_code": {
              "type": "number",
              "example": 9000
            },
            "countries_iso": {
              "type": "string",
              "example": "SE"
            },
            "users_user_id": {
              "type": "number",
              "example": 15
            },
            "is_user_profile": {
              "type": "number",
              "example": 0
            }
          }
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "oliver1"
            },
            "password": {
              "type": "string",
              "example": "c7230e5e7786d6d996a586b5a3616eec"
            },
            "created_date": {
              "type": "string",
              "example": "2011-07-29"
            },
            "is_archived": {
              "type": "number",
              "example": 0
            },
            "last_logged_in": {
              "type": "string",
              "example": "2006-05-29"
            },
            "customers": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "Jennifer"
                },
                "last_name": {
                  "type": "string",
                  "example": "Chandler"
                },
                "street": {
                  "type": "string",
                  "example": "8650 Michael Grove"
                },
                "email": {
                  "type": "string",
                  "example": "gjoseph@gmail.com"
                },
                "phone": {
                  "type": "string",
                  "example": "40949002"
                },
                "cities_postal_code": {
                  "type": "number",
                  "example": 1000
                },
                "countries_iso": {
                  "type": "string",
                  "example": "DK"
                },
                "users_user_id": {
                  "type": "number",
                  "example": 123
                },
                "is_user_profile": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "login": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "user1"
            },
            "password": {
              "type": "string",
              "example": "user1kode"
            }
          }
        }
      }
    },
    "LoginEmployee": {
      "type": "object",
      "properties": {
        "login": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "admin@gmail.com"
            },
            "password": {
              "type": "string",
              "example": "adminkode"
            }
          }
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "example": "oliv3f342"
            },
            "password": {
              "type": "string",
              "example": "madoli123"
            },
            "created_date": {
              "type": "string",
              "example": "2011-07-29"
            },
            "is_archived": {
              "type": "number",
              "example": 0
            },
            "last_logged_in": {
              "type": "string",
              "example": "2006-05-29"
            },
            "customers": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "Jennifer"
                },
                "last_name": {
                  "type": "string",
                  "example": "Chandler"
                },
                "street": {
                  "type": "string",
                  "example": "8650 Michael Grove"
                },
                "email": {
                  "type": "string",
                  "example": "gjoseph@gmail.com"
                },
                "phone": {
                  "type": "string",
                  "example": "40949002"
                },
                "cities_postal_code": {
                  "type": "number",
                  "example": 1000
                },
                "countries_iso": {
                  "type": "string",
                  "example": "DK"
                },
                "users_user_id": {
                  "type": "number",
                  "example": 123
                },
                "is_user_profile": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      }
    },
    "EditUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "number",
              "example": 16
            },
            "username": {
              "type": "string",
              "example": "sørfeneftfffffaf2ffffftfsffd32s"
            },
            "password": {
              "type": "string",
              "example": "fjksdjfkljsdaf"
            },
            "created_date": {
              "type": "string",
              "example": "2021-03-14"
            },
            "is_archived": {
              "type": "number",
              "example": 0
            },
            "last_logged_in": {
              "type": "string",
              "example": "2018-11-27"
            },
            "customers": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "Alexander"
                },
                "last_name": {
                  "type": "string",
                  "example": "Jensen"
                },
                "street": {
                  "type": "string",
                  "example": "6113 Frederick Trail Suite 882"
                },
                "email": {
                  "type": "string",
                  "example": "patricifa73@ho2fff3ffdtmfffsdfsdilfff.comes2"
                },
                "phone": {
                  "type": "string",
                  "example": "46437375"
                },
                "cities_postal_code": {
                  "type": "number",
                  "example": 2000
                },
                "countries_iso": {
                  "type": "string",
                  "example": "DK"
                },
                "is_user_profile": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      }
    },
    "OrderTypeOne": {
      "type": "object",
      "properties": {
        "shipment_type": {
          "type": "number",
          "example": 1
        },
        "order": {
          "type": "object",
          "properties": {
            "comment": {
              "type": "string",
              "example": "blablabla"
            },
            "shippers_shipper_id": {
              "type": "number",
              "example": 3
            },
            "warehouses_warehouse_id": {
              "type": "number",
              "example": 1
            }
          }
        },
        "product": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "product_id": {
                "type": "number",
                "example": 4
              },
              "quantity": {
                "type": "number",
                "example": 2
              }
            }
          }
        }
      }
    },
    "OrderTypeTwo": {
      "type": "object",
      "properties": {
        "shipment_type": {
          "type": "number",
          "example": 2
        },
        "customer": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string",
              "example": "David"
            },
            "last_name": {
              "type": "string",
              "example": "Clements"
            },
            "street": {
              "type": "string",
              "example": "59161 Chandler Rapids"
            },
            "email": {
              "type": "string",
              "example": "nguyenpatrick@gmail.com"
            },
            "phone": {
              "type": "string",
              "example": "84081093"
            },
            "cities_postal_code": {
              "type": "number",
              "example": 9000
            },
            "countries_iso": {
              "type": "string",
              "example": "SE"
            },
            "users_user_id": {
              "type": "number",
              "example": 15
            },
            "is_user_profile": {
              "type": "number",
              "example": 0
            }
          }
        },
        "order": {
          "type": "object",
          "properties": {
            "comment": {
              "type": "string",
              "example": "heyheyhey"
            },
            "shippers_shipper_id": {
              "type": "number",
              "example": 2
            },
            "po_boxes_id": {
              "type": "number",
              "example": 3
            },
            "warehouses_warehouse_id": {
              "type": "number",
              "example": 2
            }
          }
        },
        "product": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "product_id": {
                "type": "number",
                "example": 15
              },
              "quantity": {
                "type": "number",
                "example": 8
              }
            }
          }
        }
      }
    },
    "AddProduct": {
      "type": "object",
      "properties": {
        "product": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "cool cape"
            },
            "price": {
              "type": "number",
              "example": 1800
            },
            "size": {
              "type": "string",
              "example": "l"
            },
            "description": {
              "type": "string",
              "example": "totally awesome cape"
            },
            "is_archived": {
              "type": "boolean",
              "example": false
            },
            "brands_brand_id": {
              "type": "number",
              "example": 2
            },
            "colors_color_id": {
              "type": "number",
              "example": 2
            },
            "manufacturers_manufacturer_id": {
              "type": "number",
              "example": 2
            },
            "categories_category_id": {
              "type": "number",
              "example": 2
            }
          }
        }
      }
    },
    "EditProduct": {
      "type": "object",
      "properties": {
        "product": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "number",
              "example": 26
            },
            "name": {
              "type": "string",
              "example": "extra cool cape"
            },
            "price": {
              "type": "number",
              "example": 1111
            },
            "size": {
              "type": "string",
              "example": "l"
            },
            "description": {
              "type": "string",
              "example": "todtally mega awesome cape"
            },
            "is_archived": {
              "type": "boolean",
              "example": false
            },
            "brands_brand_id": {
              "type": "number",
              "example": 2
            },
            "colors_color_id": {
              "type": "number",
              "example": 2
            },
            "manufacturers_manufacturer_id": {
              "type": "number",
              "example": 2
            },
            "categories_category_id": {
              "type": "number",
              "example": 2
            }
          }
        }
      }
    }
  }
}